<?php

declare(strict_types=1);

require __DIR__ . '/../vendor/autoload.php';

use App\Interfaces\MyInterface;
use App\ClassA;

//? Anonymous Classes

//? Anonymous classes are useful when simple, one-off objects need to be created. They are defined using the new class syntax, which is followed by a set of parentheses containing the class definition.

//? Anonymous classes can accept arguments in their constructor, but they cannot have a named class. They can implement interfaces, extend classes, and use traits.

$obj = new class(1, 2, 3) implements MyInterface
{
    public function __construct(public int $x, public int $y, public int $z)
    {
    }
};

// The class name is generated by PHP and can be retrieved using the get_class() function.
//* var_dump(get_class($obj));

foo($obj);

//? Anonymous classes can be used to create simple objects that do not need to be reused. They are useful for creating objects that are only used once.
$classA = new ClassA(1, 2);

// This will create an anonymous class 
var_dump($classA->bar());

function foo(MyInterface $obj)
{
    var_dump($obj);
}
